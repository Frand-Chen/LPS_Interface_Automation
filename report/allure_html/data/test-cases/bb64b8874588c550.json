{
  "uid" : "bb64b8874588c550",
  "name" : "缺少sessionId",
  "fullName" : "testcases.test_session.TestSession#test_delete_session_abnormal",
  "historyId" : "23f92ca06ec66cd57ba34a15bb5d821a",
  "time" : {
    "start" : 1591518513167,
    "stop" : 1591518513677,
    "duration" : 510
  },
  "description" : "测试 deleteSessoin 请求异常的用例",
  "descriptionHtml" : "<p>测试 deleteSessoin 请求异常的用例</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 404 == 400\n +  where 400 = <Response [400]>.status_code",
  "statusTrace" : "self = <testcases.test_session.TestSession object at 0x0000029FED27CEB8>\ntest_data = <common.read_excel.TestData object at 0x0000029FED1FD518>\nget_session = None\n\n    @allure.story(\"异常删除 Session\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"{test_data.title}\")\n    # @pytest.mark.skip\n    @pytest.mark.parametrize(\"test_data\", delete_session_abnormal_data)\n    def test_delete_session_abnormal(self, test_data, get_session):\n        \"\"\"测试 deleteSessoin 请求异常的用例\"\"\"\n        case_id, interface, flow, title, method, url, params, headers, data, expected, check_sql = get_test_data(\n            test_data)\n        headers[\"Host\"] = sec_conf.get(\"environment\", \"host\")\n    \n        if title == \"缺少sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"errorAKey\")\n        elif title == \"错误的sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"AKey\")\n        elif title == \"错误的AKey\":\n            headers[\"AKey\"] = \"8D1097CD-40DF-4BA2-8EFD-CCD896798B23\"\n        elif title == \"缺少AKey\":\n            headers[\"AKey\"] = None\n    \n        response = http.send(url=url, method=method, headers=headers)\n    \n        try:\n            assert expected[\"code\"] == response.status_code\n        except AssertionError as e:\n            self.excel.write_data(row=case_id + 1, column=self.result_column, value=\"Fail\", font_color=colors.RED)\n            my_logger.info(\"{} - {}：{} ---> Fail\".format(interface, case_id, title))\n>           raise e\n\ntestcases\\test_session.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcases.test_session.TestSession object at 0x0000029FED27CEB8>\ntest_data = <common.read_excel.TestData object at 0x0000029FED1FD518>\nget_session = None\n\n    @allure.story(\"异常删除 Session\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"{test_data.title}\")\n    # @pytest.mark.skip\n    @pytest.mark.parametrize(\"test_data\", delete_session_abnormal_data)\n    def test_delete_session_abnormal(self, test_data, get_session):\n        \"\"\"测试 deleteSessoin 请求异常的用例\"\"\"\n        case_id, interface, flow, title, method, url, params, headers, data, expected, check_sql = get_test_data(\n            test_data)\n        headers[\"Host\"] = sec_conf.get(\"environment\", \"host\")\n    \n        if title == \"缺少sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"errorAKey\")\n        elif title == \"错误的sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"AKey\")\n        elif title == \"错误的AKey\":\n            headers[\"AKey\"] = \"8D1097CD-40DF-4BA2-8EFD-CCD896798B23\"\n        elif title == \"缺少AKey\":\n            headers[\"AKey\"] = None\n    \n        response = http.send(url=url, method=method, headers=headers)\n    \n        try:\n>           assert expected[\"code\"] == response.status_code\nE           assert 404 == 400\nE            +  where 400 = <Response [400]>.status_code\n\ntestcases\\test_session.py:157: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_headers_info",
    "time" : {
      "start" : 1591518512849,
      "stop" : 1591518512849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "get_session",
    "time" : {
      "start" : 1591518512849,
      "stop" : 1591518513167,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "测试 deleteSessoin 请求异常的用例",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 404 == 400\n +  where 400 = <Response [400]>.status_code",
    "statusTrace" : "self = <testcases.test_session.TestSession object at 0x0000029FED27CEB8>\ntest_data = <common.read_excel.TestData object at 0x0000029FED1FD518>\nget_session = None\n\n    @allure.story(\"异常删除 Session\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"{test_data.title}\")\n    # @pytest.mark.skip\n    @pytest.mark.parametrize(\"test_data\", delete_session_abnormal_data)\n    def test_delete_session_abnormal(self, test_data, get_session):\n        \"\"\"测试 deleteSessoin 请求异常的用例\"\"\"\n        case_id, interface, flow, title, method, url, params, headers, data, expected, check_sql = get_test_data(\n            test_data)\n        headers[\"Host\"] = sec_conf.get(\"environment\", \"host\")\n    \n        if title == \"缺少sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"errorAKey\")\n        elif title == \"错误的sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"AKey\")\n        elif title == \"错误的AKey\":\n            headers[\"AKey\"] = \"8D1097CD-40DF-4BA2-8EFD-CCD896798B23\"\n        elif title == \"缺少AKey\":\n            headers[\"AKey\"] = None\n    \n        response = http.send(url=url, method=method, headers=headers)\n    \n        try:\n            assert expected[\"code\"] == response.status_code\n        except AssertionError as e:\n            self.excel.write_data(row=case_id + 1, column=self.result_column, value=\"Fail\", font_color=colors.RED)\n            my_logger.info(\"{} - {}：{} ---> Fail\".format(interface, case_id, title))\n>           raise e\n\ntestcases\\test_session.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcases.test_session.TestSession object at 0x0000029FED27CEB8>\ntest_data = <common.read_excel.TestData object at 0x0000029FED1FD518>\nget_session = None\n\n    @allure.story(\"异常删除 Session\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.title(\"{test_data.title}\")\n    # @pytest.mark.skip\n    @pytest.mark.parametrize(\"test_data\", delete_session_abnormal_data)\n    def test_delete_session_abnormal(self, test_data, get_session):\n        \"\"\"测试 deleteSessoin 请求异常的用例\"\"\"\n        case_id, interface, flow, title, method, url, params, headers, data, expected, check_sql = get_test_data(\n            test_data)\n        headers[\"Host\"] = sec_conf.get(\"environment\", \"host\")\n    \n        if title == \"缺少sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"errorAKey\")\n        elif title == \"错误的sessionId\":\n            headers[\"AKey\"] = sec_conf.get(\"environment\", \"AKey\")\n        elif title == \"错误的AKey\":\n            headers[\"AKey\"] = \"8D1097CD-40DF-4BA2-8EFD-CCD896798B23\"\n        elif title == \"缺少AKey\":\n            headers[\"AKey\"] = None\n    \n        response = http.send(url=url, method=method, headers=headers)\n    \n        try:\n>           assert expected[\"code\"] == response.status_code\nE           assert 404 == 400\nE            +  where 400 = <Response [400]>.status_code\n\ntestcases\\test_session.py:157: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "92e0ec901bb43873",
      "name" : "log",
      "source" : "92e0ec901bb43873.txt",
      "type" : "text/plain",
      "size" : 81
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "异常删除 Session"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "feature",
    "value" : "获取 Session 接口"
  }, {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_session"
  }, {
    "name" : "subSuite",
    "value" : "TestSession"
  }, {
    "name" : "host",
    "value" : "DESKTOP-OL8RNLN"
  }, {
    "name" : "thread",
    "value" : "93100-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_session"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "test_data",
    "value" : "<common.read_excel.TestData object at 0x0000029FED1FD518>"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "bb64b8874588c550.json",
  "parameterValues" : [ "<common.read_excel.TestData object at 0x0000029FED1FD518>" ]
}